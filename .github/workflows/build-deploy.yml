name: Backend Build&Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Build Spring Project
      run: |
        chmod +x ./gradlew
        ./gradlew wrapper 
        ./gradlew clean bootjar

    # Build & Push Docker Image
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker Spring Project Image
      uses: docker/build-push-action@v5
      with:
        context: .
        dockerfile: Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:backend-latest
        
  deploy: 
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: EC2 Docker Compose Update and Run
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        port: 22
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          # echo ${{ secrets.DOCKERHUB_PASSWORD }} | sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          export SPRING_ACTIVE_PROFILE=${{ secrets.SPRING_ACTIVE_PROFILE }}
          export SPRING_DATABASE_USERNAME=${{ secrets.SPRING_DATABASE_USERNAME }}
          export SPRING_DATABASE_PASSWORD=${{ secrets.SPRING_DATABASE_PASSWORD }}
          export JWT_SECRET_KEY1=${{ secrets.JWT_SECRET_KEY1 }}
          export JWT_SECRET_KEY2=${{ secrets.JWT_SECRET_KEY2 }}
          export JWT_SECRET_KEY3=${{ secrets.JWT_SECRET_KEY3 }}
          cd /docker-compose
          sudo -E docker-compose pull
          sudo -E docker-compose up -d --force-recreate
